version: '3.8'

services:
  # Redis 消息总线
  redis:
    image: redis:7-alpine
    container_name: aivtuber-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3



  # 网关服务
  gateway:
    build:
      context: ./services/gateway-python
      dockerfile: Dockerfile
    container_name: aivtuber-gateway
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - INPUT_HANDLER_URL=ws://input-handler:8001
      - OUTPUT_HANDLER_URL=ws://output-handler:8002
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  # Dialog Engine - 同进程对话、ASR 与 TTS 编排
  dialog-engine:
    build:
      context: ./services/dialog-engine
      dockerfile: Dockerfile
    container_name: aivtuber-dialog-engine
    environment:
      - PORT=8100
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - OUTPUT_INGEST_WS_URL=${OUTPUT_INGEST_WS_URL:-ws://output-handler:8002/ws/ingest/tts}
      - SYNC_TTS_STREAMING=${SYNC_TTS_STREAMING:-false}
      - SYNC_TTS_BARGE_IN=${SYNC_TTS_BARGE_IN:-false}
      - SYNC_TTS_PROVIDER=${SYNC_TTS_PROVIDER:-mock}
      - MOCK_TTS_CHUNK_DELAY_MS=${MOCK_TTS_CHUNK_DELAY_MS:-200}
      - MOCK_TTS_CHUNK_COUNT=${MOCK_TTS_CHUNK_COUNT:-50}
      - EDGE_TTS_VOICE=${EDGE_TTS_VOICE:-zh-CN-XiaoxiaoNeural}
      - EDGE_TTS_RATE=${EDGE_TTS_RATE:-+0%}
      - EDGE_TTS_VOLUME=${EDGE_TTS_VOLUME:-+0%}
      - EDGE_TTS_OUTPUT_FORMAT=${EDGE_TTS_OUTPUT_FORMAT:-riff-24khz-16bit-mono-pcm}
      - ENABLE_ASYNC_EXT=${ENABLE_ASYNC_EXT:-false}
      - ENABLE_SHORT_TERM_MEMORY=${ENABLE_SHORT_TERM_MEMORY:-true}
      - ENABLE_LTM_INLINE=${ENABLE_LTM_INLINE:-false}
      - ENABLE_REAL_LLM=${ENABLE_REAL_LLM:-false}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-}
      - OPENAI_ORG_ID=${OPENAI_ORG_ID:-}
      - STM_DB_PATH=${STM_DB_PATH:-/app/data/dialog_memory.sqlite}
      - STM_CONTEXT_TURNS=${STM_CONTEXT_TURNS:-20}
      - LTM_BASE_URL=${LTM_BASE_URL:-http://memory-python:8200}
      - LTM_RETRIEVE_PATH=${LTM_RETRIEVE_PATH:-/v1/memory/retrieve}
      - LTM_RETRIEVE_TIMEOUT=${LTM_RETRIEVE_TIMEOUT:-3}
      - LTM_MAX_SNIPPETS=${LTM_MAX_SNIPPETS:-5}
      - LLM_MODEL=${LLM_MODEL:-gpt-4o-mini}
      - LLM_TEMPERATURE=${LLM_TEMPERATURE:-0.7}
      - LLM_MAX_TOKENS=${LLM_MAX_TOKENS:-1024}
      - LLM_TOP_P=${LLM_TOP_P:-1.0}
      - LLM_FREQUENCY_PENALTY=${LLM_FREQUENCY_PENALTY:-0.0}
      - LLM_PRESENCE_PENALTY=${LLM_PRESENCE_PENALTY:-0.0}
      - LLM_REQUEST_TIMEOUT=${LLM_REQUEST_TIMEOUT:-30}
      - LLM_RETRY_LIMIT=${LLM_RETRY_LIMIT:-2}
      - LLM_RETRY_BACKOFF_SECONDS=${LLM_RETRY_BACKOFF_SECONDS:-0.5}
    ports:
      - "8100:8100"
    volumes:
      - dialog_engine_data:/app/data
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  # 输入处理服务
  input-handler:
    build:
      context: ./services/input-handler-python
      dockerfile: Dockerfile
    container_name: aivtuber-input-handler
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - DIALOG_ENGINE_URL=${DIALOG_ENGINE_URL:-http://dialog-engine:8100}
    volumes:
      - temp_files:/tmp/aivtuber_tasks
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      dialog-engine:
        condition: service_started

  # 记忆服务
  memory:
    build:
      context: ./services/memory-python
      dockerfile: Dockerfile
    container_name: aivtuber-memory
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - memory_data:/app/data
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  # PostgreSQL数据库 (用于pgvector)
  postgres:
    image: pgvector/pgvector:pg16
    container_name: aivtuber-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-ltm_vectors}
      - POSTGRES_USER=${POSTGRES_USER:-ltm_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ltm_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ltm_user}"]
      interval: 10s
      timeout: 3s
      retries: 3

  # 长期记忆服务
  long-term-memory:
    build:
      context: ./services/long-term-memory-python
      dockerfile: Dockerfile
    container_name: aivtuber-long-term-memory
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PGVECTOR_HOST=${PGVECTOR_HOST:-postgres}
      - PGVECTOR_PORT=${PGVECTOR_PORT:-5432}
      - PGVECTOR_DATABASE=${POSTGRES_DB:-ltm_vectors}
      - PGVECTOR_USER=${POSTGRES_USER:-ltm_user}
      - PGVECTOR_PASSWORD=${POSTGRES_PASSWORD:-ltm_password}
      - MEM0_CONFIG_PATH=config/mem0_config.yaml
      - MEM0_LLM_PROVIDER=${MEM0_LLM_PROVIDER:-}
      - MEM0_LLM_CONFIG_JSON=${MEM0_LLM_CONFIG_JSON:-}
      - MEM0_EMBEDDER_PROVIDER=${MEM0_EMBEDDER_PROVIDER:-}
      - MEM0_EMBEDDER_CONFIG_JSON=${MEM0_EMBEDDER_CONFIG_JSON:-}
      - MEM0_API_KEY=${MEM0_API_KEY:-}
    volumes:
      - ltm_data:/app/data
      - ltm_logs:/app/logs
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  # 输出处理服务
  output-handler:
    build:
      context: ./services/output-handler-python
      dockerfile: Dockerfile
    container_name: aivtuber-output-handler
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - SYNC_TTS_STREAMING=${SYNC_TTS_STREAMING:-false}
      - SYNC_TTS_BARGE_IN=${SYNC_TTS_BARGE_IN:-false}
    volumes:
      - temp_files:/tmp/aivtuber_tasks
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

volumes:
  redis_data:
  memory_data:
  postgres_data:
  ltm_data:
  ltm_logs:
  temp_files:
  dialog_engine_data:

networks:
  default:
    name: aivtuber-network
