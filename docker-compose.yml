version: '3.8'

services:
  # Redis 消息总线
  redis:
    image: redis:7-alpine
    container_name: aivtuber-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3





  # ASR语音识别服务
  asr:
    build:
      context: ./services/asr-python
      dockerfile: Dockerfile
    container_name: aivtuber-asr
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  # AI聊天服务
  chat-ai:
    build:
      context: ./services/chat-ai-python
      dockerfile: Dockerfile
    container_name: aivtuber-chat-ai
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  # 网关服务
  gateway:
    build:
      context: ./services/gateway-python
      dockerfile: Dockerfile
    container_name: aivtuber-gateway
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - INPUT_HANDLER_URL=ws://input-handler:8001
      - OUTPUT_HANDLER_URL=ws://output-handler:8002
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  # 输入处理服务
  input-handler:
    build:
      context: ./services/input-handler-python
      dockerfile: Dockerfile
    container_name: aivtuber-input-handler
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
    volumes:
      - temp_files:/tmp/aivtuber_tasks
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  # 记忆服务
  memory:
    build:
      context: ./services/memory-python
      dockerfile: Dockerfile
    container_name: aivtuber-memory
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - memory_data:/app/data
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  # 输出处理服务
  output-handler:
    build:
      context: ./services/output-handler-python
      dockerfile: Dockerfile
    container_name: aivtuber-output-handler
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
    volumes:
      - temp_files:/tmp/aivtuber_tasks
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  # TTS服务
  tts:
    build:
      context: ./services/tts-python
      dockerfile: Dockerfile
    container_name: aivtuber-tts
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
    volumes:
      - temp_files:/tmp/aivtuber_tasks
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

volumes:
  redis_data:
  memory_data:
  temp_files:

networks:
  default:
    name: aivtuber-network
