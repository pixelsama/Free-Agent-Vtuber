# OpenAI API Key
OPENAI_API_KEY=your_openai_api_key_here

# Redis Configuration
# Default Redis host for docker-compose
REDIS_HOST=redis
# Default Redis port
REDIS_PORT=6379

########################################
# Sync core (dialog-engine) flags
########################################
# dialog-engine 的 HTTP 基址（用于 /chat/stream SSE）
DIALOG_ENGINE_URL=http://dialog-engine:8100
# 启用半流式/流式 TTS 推送（M2 起可用）
SYNC_TTS_STREAMING=false
# 允许播报打断（barge-in，M2 起可用）
SYNC_TTS_BARGE_IN=false
# 启用 Outbox + Redis Streams 异步扩展（M3 起可用）
ENABLE_ASYNC_EXT=false
# 按需同步召回 LTM（默认关闭）
ENABLE_LTM_INLINE=false
# 启用短期记忆（SQLite）
ENABLE_SHORT_TERM_MEMORY=true
STM_DB_PATH=/app/data/dialog_memory.sqlite
STM_CONTEXT_TURNS=20
# 启用真实 LLM 链路及模型配置
ENABLE_REAL_LLM=false
LLM_MODEL=gpt-4o-mini
LLM_TEMPERATURE=0.7
LLM_MAX_TOKENS=1024
LLM_TOP_P=1.0
LLM_FREQUENCY_PENALTY=0.0
LLM_PRESENCE_PENALTY=0.0
LLM_REQUEST_TIMEOUT=30
LLM_RETRY_LIMIT=2
LLM_RETRY_BACKOFF_SECONDS=0.5

# 内联 LTM 检索配置
LTM_BASE_URL=http://memory-python:8200
LTM_RETRIEVE_PATH=/v1/memory/retrieve
LTM_RETRIEVE_TIMEOUT=3
LTM_MAX_SNIPPETS=5

# 可选：自定义 OpenAI 终端或组织
OPENAI_BASE_URL=
OPENAI_ORG_ID=

# You can override these to connect to an external Redis instance, for example:
# REDIS_HOST=192.168.1.100
# REDIS_PORT=6379

# PostgreSQL数据库配置 (用于长期记忆服务的pgvector)
POSTGRES_DB=ltm_vectors
POSTGRES_USER=ltm_user
POSTGRES_PASSWORD=ltm_password

# pgvector配置
PGVECTOR_HOST=postgres
PGVECTOR_PORT=5432
PGVECTOR_DATABASE=ltm_vectors
PGVECTOR_USER=ltm_user
PGVECTOR_PASSWORD=ltm_password

# 长期记忆服务配置
MEM0_CONFIG_PATH=config/mem0_config.yaml
# MEM0_LLM_PROVIDER=openai
# MEM0_LLM_CONFIG_JSON={"model": "gpt-4o-mini", "temperature": 0.1}
# MEM0_EMBEDDER_PROVIDER=openai
# MEM0_EMBEDDER_CONFIG_JSON={"model": "text-embedding-3-small"}
ENABLE_LTM=true
LTM_REQUESTS_QUEUE=ltm_requests
LTM_RESPONSES_CHANNEL=ltm_responses

########################################
# 网络与服务发现（Gateway / Output / Ingest）
########################################
# Gateway 代理到 input-handler 的 WS 地址
INPUT_HANDLER_URL=ws://input-handler:8001
# Gateway 代理到 output-handler 的 WS 地址
OUTPUT_HANDLER_URL=ws://output-handler:8002
# dialog-engine 连接到 output-handler 的内部推流通道（仅内网）
OUTPUT_INGEST_WS_URL=ws://output-handler:8002/ws/ingest/tts

########################################
# Mock TTS (for M2 STOP testing)
########################################
# 每片延迟（毫秒）。用于模拟长流，便于测试 STOP 延迟与稳定性。
MOCK_TTS_CHUNK_DELAY_MS=200
# 分片数量。数值越大，流持续时间越长。
MOCK_TTS_CHUNK_COUNT=50

########################################
# Edge TTS (M4 流式语音)
########################################
# 切换同步 TTS Provider: mock | edge-tts | openai (预留)
SYNC_TTS_PROVIDER=mock
# Edge TTS 语音与音色配置（默认中文女声）
EDGE_TTS_VOICE=zh-CN-XiaoxiaoNeural
EDGE_TTS_RATE=+0%
EDGE_TTS_VOLUME=+0%
EDGE_TTS_OUTPUT_FORMAT=riff-24khz-16bit-mono-pcm
